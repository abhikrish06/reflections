When would you want to use a remote repository rather than keeping all your work
local?

    Fill in your answer here

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?
Ans. Because we are the master of our content and we better know about the changes. Moreover, if multiple people are
working on the same repo/file, it will be difficult for Git to manage it. Hence, it is good for the user to pull before
working any further else there wont be any sync.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?
Ans. A fork is a copy of a repository that allows you to freely experiment with changes without affecting the original project.
When you create a new repository on GitHub, it exists as a remote location where your project is stored.
Unlike forking, you won't be able to pull down changes from the original repository you cloned from, and if the project is owned by someone else you won't be able to contribute back to it unless you are specifically invited as a collaborator. Cloning is ideal for instances when you need a way to quickly get your own copy of a repository where you may not be contributing to the original project.(Src: https://github.community/t5/Support-Protips/The-difference-between-forking-and-cloning-a-repository/ba-p/1372)

What is the benefit of having a copy of the last known state of the remote
stored locally?
Ans. It helps to resolve merge conflicts.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?
Ans. Mail the files and ask to keep modifying and sharing. It will be much harder and
there wont be concurrency and lot of conflicts.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
